parameters:
  coverageParam: ''

steps:
  - powershell: |
        Invoke-WebRequest -Uri "https://github.com/Azure/azure-sdk-tools/releases/download/sdk-tools_14793/sdk-tools.zip" `
        -OutFile "sdk-tools.zip" | Wait-Process; Expand-Archive -Path "sdk-tools.zip" -DestinationPath "./sdk-tools/"
    workingDirectory: '$(Build.BinariesDirectory)'
    displayName: 'Download Tools Archive From Github Release and Extract it'

  - task: UsePythonVersion@0
    displayName: 'Use Python $(PythonVersion)'
    inputs:
      versionSpec: '$(PythonVersion)'

  - bash: printenv
    displayName: Show environment variables

  - bash: |
      export PIP_DOWNLOAD_CACHE="$(Pipeline.Workspace)/pip-cache"
      echo "##vso[task.setvariable variable=PIP_DOWNLOAD_CACHE]$PIP_DOWNLOAD_CACHE"
      mkdir -p $PIP_DOWNLOAD_CACHE
    displayName: Set pip cache folder

  - task: DownloadPipelineArtifact@1
    inputs:
      targetPath: $(PIP_DOWNLOAD_CACHE)
      artifactName: $(cacheName)
    condition: eq(variables['restoreCache'], 'true')
    displayName: 'Restore cache'
    continueOnError: true

  - task: PythonScript@0
    displayName: 'Run VerifyAgentOS script'
    inputs:
      scriptPath: '$(Build.BinariesDirectory)/sdk-tools/scripts/python/verify_agent_os.py'
      arguments: $(OSName)

  - script: |
      pip install pathlib twine codecov beautifulsoup4
    displayName: 'Prep Environment'

  - task: PythonScript@0
    displayName: 'Setup and Run Tests'
    inputs:
      scriptPath: 'scripts/devops_tasks/setup_execute_tests.py'
      arguments: '"$(BuildTargetingString)" --junitxml="junit/test-results.xml" ${{ parameters.coverageParam }}'

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: $(cacheName)
      targetPath: $(PIP_DOWNLOAD_CACHE)
    condition: eq(variables['saveCache'], 'true')
    displayName: 'Save cache'
    continueOnError: true

 # - task: PublishTestResults@2
 #   condition: succeededOrFailed()
 #   inputs:
 #     testResultsFiles: 'junit/test-results.xml'
 #     testRunTitle: '$(OSName) Python $(PythonVersion)'